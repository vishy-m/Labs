#BlueJ class context
comment0.params=args
comment0.target=void\ main(java.lang.String[])
comment1.params=
comment1.target=void\ runTests()
comment1.text=\r\n\ Run\ customized\ tests\ of\ various\ classes/method\ and\ custom\ build\ your\ GUI\r\n\r\n\ TO\ CREATE\ A\ HEADER\ IN\ THE\ GUI\r\n\ \ \ \ \ void\ header(String\ name)\r\n\ \ \ \r\n\ \ \ \ \ Example\:\r\n\ \ \ \ \ header("Histogram");\r\n\r\n\ TO\ CREATE\ A\ MESSAGE/NOTE\ IN\ THE\ GUI\r\n\ \ \ \ \ void\ message(String\ information)\r\n\ \ \ \ \ void\ message(String\ information,\ boolean\ correct)\r\n\ \ \ \r\n\ \ \ \ \ Example\:\r\n\ \ \ \ \ message("This\ portion\ of\ the\ assignment\ is\ optional\ and\ for\ extra\ credit\ only.");\ //default\ grey\ color\r\n\ \ \ \ \ message("I'm\ requesting\ that\ this\ method\ have\ a\ green\ background.",\ true)\ //green\ color\r\n\ \ \ \ \ message("I'm\ requesting\ that\ this\ method\ have\ a\ red\ background.",\ false)\ //red\ color\r\n\ \ \ \ \ \r\n\r\n\ TO\ CREATE\ A\ BUTTON\ FOR\ LOADING\ SOURCE\ CODE\ /\ DATA\ FILES\r\n\ \ \ \ \ void\ srcButton(String\ sourceFileNamesCommaDelimited)\r\n\ \ \ \ \ void\ srcButton(String[]\ sourceFileNames)\r\n\ \ \ \ \ \r\n\ \ \ \ \ Example\:\r\n\ \ \ \ \ srcButton("PracticeProblems,\ Data.txt");\ \ //If\ file\ has\ no\ extension,\ .java\ is\ assumed\r\n\ \ \ \ \ srcButton(new\ String[]{"Car.java",\ "Truck.java",\ "DataFile.in"}\r\n\r\n\ TO\ TEST\ A\ CONSTRUCTOR\ AND\ RECEIVE\ THE\ INSTANTIATED\ OBJECT\:\r\n\ \ \ \ \ Object\ makeObject(String\ className,\ Object[]\ args)\r\n\ \ \ \ \ Object\ makeObject(String\ className,\ Object[]\ args,\ String\ inputScript)\r\n\r\n\ \ \ \ \ Parameters\:\r\n\ \ \ \ \ className\ -\ Name\ of\ the\ constructor\ you\ are\ calling\r\n\ \ \ \ \ args\ -\ arguments\ you\ are\ passing\ to\ the\ constructor.\ \ null\ can\ be\ used\ if\ calling\ a\ default\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ (no\ parameter)\ constructor\r\n\ \ \ \ \ inputScript\ -\ data\ that\ will\ be\ fed\ through\ System.in\ in\ the\ event\ that\ the\ constructor\r\n\ \ \ \ \ \ \ \ \ requests\ user\ input\r\n\ \ \ \ \ \ \r\n\ \ \ \ \ Returns\:\r\n\ \ \ \ \ the\ object\ constructed\ from\ the\ call\r\n\ \ \ \ \ \ \r\n\ \ \ \ \ Example\ usage\:\r\n\ \ \ \ \ //Using\ this...\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ //\ is\ similar\ to\ using\ this...\ \r\n\ \ \ \ \ Object\ o\ \=\ makeObject("Person",\ new\ Object[]{"Fred",\ 27});\ \ \ //\ Object\ o\ \=\ new\ Person("Fred",\ 27);\r\n\ \ \ \ \ Object\ o\ \=\ makeObject("Person",\ null,\ "Fred\\n27");\ \ \ \ \ \ \ \ \ \ \ //\ Object\ o\ \=\ new\ Person();\ (provides\ user\ input)\ \ \ \ \ \ \ \ \ \ \r\n\r\n\ TO\ TEST\ A\ METHOD\ \ (The\ testMethod\ method\ is\ very\ overloaded.\ \ You\ have\ several\ options.)\r\n\ \ \ \ \ Object\ testMethod(Object\ o,\ \ \ \ \ String\ mName,\ Object[]\ args)\r\n\ \ \ \ \ Object\ testMethod(String\ cName,\ String\ mName,\ Object[]\ args)\r\n\ \ \ \ \ Object\ testMethod(Object\ o,\ \ \ \ \ String\ mName,\ Object[]\ args,\ String\ expOut)\r\n\ \ \ \ \ Object\ testMethod(String\ cName,\ String\ mName,\ Object[]\ args,\ String\ expOut)\r\n\ \ \ \ \ Object\ testMethod(Object\ o,\ \ \ \ \ String\ mName,\ Object[]\ args,\ String\ expOut,\ String\ inputScript)\r\n\ \ \ \ \ Object\ testMethod(String\ cName,\ String\ mName,\ Object[]\ args,\ String\ expOut,\ String\ inputScript)\r\n\ \ \ \r\n\ \ \ \ \ Parameters\:\r\n\ \ \ \ \ o\ -\ the\ object\ invoking\ the\ method\ you\ want\ to\ test\ (for\ non-static\ methods)\r\n\ \ \ \ \ cName\ -\ name\ of\ the\ class\ invoking\ the\ method\ you\ want\ to\ test\ (for\ static\ methods)\r\n\ \ \ \ \ mName\ -\ name\ of\ the\ method\ being\ invoked\r\n\ \ \ \ \ args\ -\ arguments\ being\ passing\ to\ the\ method.\ \ null\ can\ be\ used\ if\ the\ method\ being\ testing\r\n\ \ \ \ \ \ \ \ \ \ \ \ does\ not\ require\ any\ parameters.\r\n\ \ \ \ \ expOut\ -\ the\ expected\ output\ or\ return\ value\ from\ running\ the\ method\r\n\ \ \ \ \ \ \ \ \ \ \ \ If\ an\ expOut\ is\ provided\ the\ GUI\ will\ compare\ this\ against\ the\ actual\ output/return\r\n\ \ \ \ \ \ \ \ \ \ \ \ value\ from\ the\ test\ and\ make\ a\ comparison.\ \ Leave\ this\ off\ or\ pass\ null\ if\ you\ don't\ want\r\n\ \ \ \ \ \ \ \ \ \ \ \ to\ make\ a\ red\ light/green\ light\ comparison\ against\ the\ actual\ output.)\r\n\ \ \ \ \ inputScript\ -\ data\ that\ will\ be\ fed\ through\ System.in\ in\ the\ event\ that\ the\ method\r\n\ \ \ \ \ \ \ \ \ requests\ user\ input\r\n\ \ \ \r\n\ \ \ \ \ Returns\:\r\n\ \ \ \ \ the\ return\ value\ of\ the\ method\ being\ invoked\ (as\ Object)\r\n\ \ \ \ \ or\ null\ when\ testing\ void\ methods\ or\ the\ student\ code\ fails\ to\ run/throws\ exception\r\n\ \ \ \r\n\ \ \ \ \ Example\ usage\:\r\n\ \ \ \ \ //Using\ this...\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ //\ is\ similar\ to\ using\ this...\ \r\n\ \ \ \ \ testMethod(myHistogram,\ "encounter",\ new\ Object[]{7});\ \ \ \ \ \ \ \ //\ myHistogram.encounter(7);\r\n\ \ \ \ \ testMethod("Practice",\ "printXs",\ new\ Object[]{4},\ "xxxx")\ \ \ \ //\ Practice.printXs(4);\ \r\n\ \ \ \ \ int\ s\ \=\ testMethod(myCar,\ "getSpeed",\ null,\ "55");\ \ \ \ \ \ \ \ \ \ \ \ //\ int\ s\ \=\ myCar.getSpeed();\r\n\r\n\ TO\ GET\ A\ CLASS\ OBJECT\ FROM\ ITS\ NAME\ \ \ \ \ \ \ \r\n\ \ \ \ \ Class\ getClassFromName(String\ className)\r\n\ \ \ \ \ \r\n\ \ \ \ \ Example\ usage\:\r\n\ \ \ \ \ Class\ c\ \=\ getClassFromName("Truck");\ \ \r\n\ \ \ \ \ \r\n\ \ \ \ \ Note\:\ Why\ would\ you\ want\ to\ do\ this?\ \ This\ will\ allow\ you\ to\ collect\ various\ information\ about\r\n\ \ \ \ \ how\ students\ coded\ the\ class,\ useful\ for\ checking\ how\ well\ students\ understand\ class\ design\ and\r\n\ \ \ \ \ inheritance.\ \ You\ can\ verify\ that\ the\ Truck\ class\ extends\ the\ Vehicle\ class.\ You\ can\ find\ out\ \r\n\ \ \ \ \ how\ many\ declared\ fields\ the\ student\ included\ (vs\ how\ many\ fields\ were\ inherited.)\ Also,\ this\ is\r\n\ \ \ \ \ your\ only\ way\ to\ get\ a\ version\ of\ the\ Class\ object\ that\ uses\ the\ same\ ClassLoader\ as\ the\ TestGUI\r\n\ \ \ \ \ (in\ the\ event\ that\ you\ need\ to\ try\ to\ cast\ Object\ o\ as\ a\ student-coded\ Truck.)\ \ For\ more\ info,\r\n\ \ \ \ \ read\ about\ the\ Class\ class\ here\:\ \ https\://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\ \r\n\r\n\ TO\ SET\ HOW\ MANY\ SECONDS\ SHOULD\ BE\ WAITED\ BEFORE\ AN\ INDIVIDUAL\ TEST\ TIMES\ OUT\r\n\ \ \ \ \ setTimeOutSec(int\ seconds);\ \ //how\ many\ seconds\ to\ wait\ before\ giving\ up.\ \ (Default\ 2)\r\n\ \ \ \r\n
numComments=2
